/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";
import {
  FunctionT,
  FunctionT$inboundSchema,
  FunctionT$Outbound,
  FunctionT$outboundSchema,
} from "./function.js";

export const ToolToolTypes = {
  Function: "function",
} as const;
export type ToolToolTypes = OpenEnum<typeof ToolToolTypes>;

export type Tool = {
  type?: ToolToolTypes | undefined;
  function: FunctionT;
};

/** @internal */
export const ToolToolTypes$inboundSchema: z.ZodType<
  ToolToolTypes,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ToolToolTypes),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ToolToolTypes$outboundSchema: z.ZodType<
  ToolToolTypes,
  z.ZodTypeDef,
  ToolToolTypes
> = z.union([
  z.nativeEnum(ToolToolTypes),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolToolTypes$ {
  /** @deprecated use `ToolToolTypes$inboundSchema` instead. */
  export const inboundSchema = ToolToolTypes$inboundSchema;
  /** @deprecated use `ToolToolTypes$outboundSchema` instead. */
  export const outboundSchema = ToolToolTypes$outboundSchema;
}

/** @internal */
export const Tool$inboundSchema: z.ZodType<Tool, z.ZodTypeDef, unknown> = z
  .object({
    type: ToolToolTypes$inboundSchema.default("function"),
    function: FunctionT$inboundSchema,
  });

/** @internal */
export type Tool$Outbound = {
  type: string;
  function: FunctionT$Outbound;
};

/** @internal */
export const Tool$outboundSchema: z.ZodType<Tool$Outbound, z.ZodTypeDef, Tool> =
  z.object({
    type: ToolToolTypes$outboundSchema.default("function"),
    function: FunctionT$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Tool$ {
  /** @deprecated use `Tool$inboundSchema` instead. */
  export const inboundSchema = Tool$inboundSchema;
  /** @deprecated use `Tool$outboundSchema` instead. */
  export const outboundSchema = Tool$outboundSchema;
  /** @deprecated use `Tool$Outbound` instead. */
  export type Outbound = Tool$Outbound;
}
